#include <iostream>
#include <vector>
#include <array>
#include <set>
#include <map>
#include <tuple>
#include <numeric>
#include <algorithm>

#ifdef NDEBUG
#undef NDEBUG
#endif

#include <assert.h>

#define ASSERT_EQ(a, b) \
   do { __typeof__ (a) _a = (a); \
       __typeof__ (b) _b = (b); \
     if (_a != _b)       \
     {                 \
       std::cout << _a << " != " << _b << std::endl; \
       assert(0);                  \
     }                  \
     }while(0)

#define myprint(arg) do { std::cout << "" #arg << " = " << arg << std::endl; } while(0)

namespace {
    using Point = std::tuple<int64_t, int64_t>;

    std::vector<std::vector<Point>> input_real = {
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{494, 16},  {499, 16}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{505, 57},  {505, 59},  {498, 59},  {498, 66},  {509, 66},  {509, 59},  {507, 59},  {507, 57}},
            {{492, 52},  {496, 52}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{510, 123}, {515, 123}},
            {{492, 48},  {496, 48}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{501, 54},  {505, 54}},
            {{513, 120}, {518, 120}},
            {{502, 138}, {502, 141}, {498, 141}, {498, 145}, {514, 145}, {514, 141}, {507, 141}, {507, 138}},
            {{483, 54},  {487, 54}},
            {{505, 57},  {505, 59},  {498, 59},  {498, 66},  {509, 66},  {509, 59},  {507, 59},  {507, 57}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{512, 106}, {512, 108}, {505, 108}, {505, 114}, {518, 114}, {518, 108}, {516, 108}, {516, 106}},
            {{532, 129}, {537, 129}},
            {{501, 16},  {506, 16}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{502, 138}, {502, 141}, {498, 141}, {498, 145}, {514, 145}, {514, 141}, {507, 141}, {507, 138}},
            {{520, 120}, {525, 120}},
            {{489, 50},  {493, 50}},
            {{498, 19},  {503, 19}},
            {{505, 151}, {505, 152}, {518, 152}, {518, 151}},
            {{510, 73},  {514, 73}},
            {{516, 77},  {520, 77}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{511, 129}, {516, 129}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{524, 123}, {529, 123}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{505, 57},  {505, 59},  {498, 59},  {498, 66},  {509, 66},  {509, 59},  {507, 59},  {507, 57}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{507, 75},  {511, 75}},
            {{495, 22},  {495, 25},  {492, 25},  {492, 32},  {501, 32},  {501, 25},  {499, 25},  {499, 22}},
            {{514, 149}, {524, 149}, {524, 148}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{504, 129}, {509, 129}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{504, 77},  {508, 77}},
            {{495, 22},  {495, 25},  {492, 25},  {492, 32},  {501, 32},  {501, 25},  {499, 25},  {499, 22}},
            {{516, 117}, {521, 117}},
            {{514, 149}, {524, 149}, {524, 148}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{495, 22},  {495, 25},  {492, 25},  {492, 32},  {501, 32},  {501, 25},  {499, 25},  {499, 22}},
            {{502, 138}, {502, 141}, {498, 141}, {498, 145}, {514, 145}, {514, 141}, {507, 141}, {507, 138}},
            {{512, 106}, {512, 108}, {505, 108}, {505, 114}, {518, 114}, {518, 108}, {516, 108}, {516, 106}},
            {{505, 57},  {505, 59},  {498, 59},  {498, 66},  {509, 66},  {509, 59},  {507, 59},  {507, 57}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{507, 126}, {512, 126}},
            {{513, 75},  {517, 75}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{502, 138}, {502, 141}, {498, 141}, {498, 145}, {514, 145}, {514, 141}, {507, 141}, {507, 138}},
            {{505, 151}, {505, 152}, {518, 152}, {518, 151}},
            {{510, 77},  {514, 77}},
            {{528, 126}, {533, 126}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{512, 106}, {512, 108}, {505, 108}, {505, 114}, {518, 114}, {518, 108}, {516, 108}, {516, 106}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{518, 129}, {523, 129}},
            {{505, 57},  {505, 59},  {498, 59},  {498, 66},  {509, 66},  {509, 59},  {507, 59},  {507, 57}},
            {{495, 22},  {495, 25},  {492, 25},  {492, 32},  {501, 32},  {501, 25},  {499, 25},  {499, 22}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{491, 19},  {496, 19}},
            {{505, 19},  {510, 19}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{506, 135}, {517, 135}, {517, 134}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{506, 135}, {517, 135}, {517, 134}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{512, 106}, {512, 108}, {505, 108}, {505, 114}, {518, 114}, {518, 108}, {516, 108}, {516, 106}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{497, 13},  {502, 13}},
            {{489, 54},  {493, 54}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{512, 106}, {512, 108}, {505, 108}, {505, 114}, {518, 114}, {518, 108}, {516, 108}, {516, 106}},
            {{505, 69},  {505, 70},  {511, 70},  {511, 69}},
            {{487, 45},  {487, 38},  {487, 45},  {489, 45},  {489, 42},  {489, 45},  {491, 45},  {491, 39},  {491, 45},  {493, 45},  {493, 39},  {493, 45}},
            {{502, 138}, {502, 141}, {498, 141}, {498, 145}, {514, 145}, {514, 141}, {507, 141}, {507, 138}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{512, 106}, {512, 108}, {505, 108}, {505, 114}, {518, 114}, {518, 108}, {516, 108}, {516, 106}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{525, 129}, {530, 129}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{505, 151}, {505, 152}, {518, 152}, {518, 151}},
            {{495, 22},  {495, 25},  {492, 25},  {492, 32},  {501, 32},  {501, 25},  {499, 25},  {499, 22}},
            {{521, 126}, {526, 126}},
            {{512, 106}, {512, 108}, {505, 108}, {505, 114}, {518, 114}, {518, 108}, {516, 108}, {516, 106}},
            {{495, 50},  {499, 50}},
            {{495, 54},  {499, 54}},
            {{502, 138}, {502, 141}, {498, 141}, {498, 145}, {514, 145}, {514, 141}, {507, 141}, {507, 138}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{508, 103}, {508, 93},  {508, 103}, {510, 103}, {510, 101}, {510, 103}, {512, 103}, {512, 96},  {512, 103}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{495, 22},  {495, 25},  {492, 25},  {492, 32},  {501, 32},  {501, 25},  {499, 25},  {499, 22}},
            {{498, 52},  {502, 52}},
            {{517, 123}, {522, 123}},
            {{514, 126}, {519, 126}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{495, 22},  {495, 25},  {492, 25},  {492, 32},  {501, 32},  {501, 25},  {499, 25},  {499, 22}},
            {{505, 69},  {505, 70},  {511, 70},  {511, 69}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{512, 90},  {512, 87},  {512, 90},  {514, 90},  {514, 86},  {514, 90},  {516, 90},  {516, 87},  {516, 90},  {518, 90},  {518, 82},  {518, 90},  {520, 90},  {520, 81},  {520, 90}, {522, 90}, {522, 86}, {522, 90}, {524, 90}, {524, 84}, {524, 90}, {526, 90}, {526, 82}, {526, 90}, {528, 90}, {528, 82}, {528, 90}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{505, 57},  {505, 59},  {498, 59},  {498, 66},  {509, 66},  {509, 59},  {507, 59},  {507, 57}},
            {{520, 165}, {520, 160}, {520, 165}, {522, 165}, {522, 163}, {522, 165}, {524, 165}, {524, 159}, {524, 165}, {526, 165}, {526, 159}, {526, 165}, {528, 165}, {528, 155}, {528, 165}},
            {{505, 69},  {505, 70},  {511, 70},  {511, 69}},
            {{505, 57},  {505, 59},  {498, 59},  {498, 66},  {509, 66},  {509, 59},  {507, 59},  {507, 57}},
            {{502, 138}, {502, 141}, {498, 141}, {498, 145}, {514, 145}, {514, 141}, {507, 141}, {507, 138}},
            {{486, 52},  {490, 52}},
    };

    std::vector<std::vector<Point>> input_test = {
            {{498, 4}, {498, 6}, {496, 6}},
            {{503, 4}, {502, 4}, {502, 9}, {494, 9}},
    };

    //auto &input = input_test;
    auto &input = input_real;

    std::map<Point, int64_t> m;

    int64_t floor_y = 0;
    int64_t max_y = 0;

    void add_line(Point from, Point to) {
        auto [from_x, from_y] = from;
        auto [to_x, to_y] = to;

        if (from_x == to_x) {
            for (int64_t y = std::min(from_y, to_y); y <= std::max(from_y, to_y); y++) {
                Point p = {from_x, y};
                m[p] = '#';
                max_y = std::max(max_y, y);
            }
        } else if (from_y == to_y) {
            for (int64_t x = std::min(from_x, to_x); x <= std::max(from_x, to_x); x++) {
                Point p = {x, from_y};
                m[p] = '#';
                max_y = std::max(max_y, from_y);
            }
        } else {
            assert(false);
        }
    }

    int64_t get_point(Point p, int64_t part) {
        auto [px, py] = p;
        if (part == 2 && py == floor_y) {
            return '#';
        }
        return m[p];
    }

    std::optional<Point> did_rest(int64_t part) {
        Point sand = {500, 0};
        auto &[sand_x, sand_y] = sand;
        for (int64_t step = 0; step < 1000000; step++) {

            if (get_point(Point{sand_x, sand_y + 1}, part) == 0) {
                sand = Point{sand_x, sand_y + 1};
            } else if (get_point(Point{sand_x - 1, sand_y + 1}, part) == 0) {
                sand = Point{sand_x - 1, sand_y + 1};
            } else if (get_point(Point{sand_x + 1, sand_y + 1}, part) == 0) {
                sand = Point{sand_x + 1, sand_y + 1};
            } else {
                m[sand] = 'o';
                return sand;
            }

        }
        return std::nullopt;
    }

    void build_map() {
        m.clear();
        for (auto &line: input) {
            assert(line.size() >= 2);
            for (int i = 0; i < line.size() - 1; i++) {
                add_line(line.at(i), line.at(i + 1));
            }
        }
        floor_y = max_y + 2;
    }

    int64_t part1() {
        build_map();
        int64_t sand_nr = 0;
        while (true) {
            if (!did_rest(1)) {
                break;
            }
            sand_nr++;
        }
        return sand_nr;
    }

    int64_t part2() {
        build_map();
        int64_t sand_nr = 1;
        while (true) {
            auto maybe_rest = did_rest(2);
            assert(maybe_rest);
            if (*maybe_rest == Point{500, 0}) {
                break;
            }
            sand_nr++;
        }
        return sand_nr;
    }
}

int _14() {
    ASSERT_EQ(part1(), 655);
    ASSERT_EQ(part2(), 26484);
    return 0;
}
